name: SiriIntents

schemes:
  SiriIntents:
    analyze:
      config: Debug
    archive:
      config: Release
    build:
      targets:
        SiriIntents:
        - running
        - testing
        - profiling
        - analyzing
        - archiving
    profile:
      config: Release
    run:
      askForAppToLaunch: true
      config: Debug
      debugEnabled: false
      disableMainThreadChecker: true
      launchAutomaticallySubstyle: 2
    test:
      config: Debug
      disableMainThreadChecker: true

targets:
  SiriIntents:
    platform: iOS
    type: app-extension

    dependencies:
    - sdk: Intents.framework

    configFiles:
      Debug: ../SiriIntents/SiriIntents-Debug.xcconfig
      Release: ../SiriIntents/SiriIntents-Release.xcconfig

    settings:
      base:
        CODE_SIGN_ENTITLEMENTS: SiriIntents/SiriIntents.entitlements
        INFOPLIST_FILE: SiriIntents/Info.plist
        LD_RUNPATH_SEARCH_PATHS: $(inherited) @executable_path/Frameworks @executable_path/../../Frameworks
        PRODUCT_BUNDLE_IDENTIFIER: $(BASE_BUNDLE_IDENTIFIER).SiriIntents
        PRODUCT_NAME: SiriIntents
        SKIP_INSTALL: YES
      configs:
        Debug:
          CODE_SIGN_IDENTITY: iPhone Developer
          CODE_SIGN_STYLE: Automatic
          PROVISIONING_PROFILE_SPECIFIER: ""
        Release:
          CODE_SIGN_IDENTITY: iPhone Distribution
          CODE_SIGN_STYLE: Manual
          COPY_PHASE_STRIP: NO
          PROVISIONING_PROFILE: $(SIRI_INTENTS_PROVISIONING_PROFILE)
          PROVISIONING_PROFILE_SPECIFIER: $(SIRI_INTENTS_PROVISIONING_PROFILE_SPECIFIER)

    postbuildScripts:
    - name: Embed Precompiled Frameworks
      runOnlyWhenInstalling: false
      script: echo "Skipping, nothing to be embedded."
      shell: /bin/sh

    sources:
    - path: ../SiriIntents
    - path: ../Riot/Generated/InfoPlist.swift
    - path: ../Riot/Categories/Bundle.swift
    - path: ../Config/CommonConfiguration.swift
    - path: ../Config/BuildSettings.swift
    - path: ../Config/Configurable.swift
    - path: ../Riot/Managers/Settings/RiotSettings.swift
